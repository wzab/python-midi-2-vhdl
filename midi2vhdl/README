Presented sources contain the converter allowing you to simulate
the music synthesizer described in VHDL, feeding it with the
commands read from the standard MIDI file.

The solution consists of two utilities:
1. midi2vhdl_txt.py
   Converts the MIDI file into the time sorted sequence of MIDI
   commands and writes them into the text file, which may be
   later read by the VHDL simulator.
   The text file consists of lines with the time value on the begining,
   and then three bytes of MIDI commands as integers
   (if the command consists of less than three bytes, the not used
   bytes are written as zeroes).
   Currently it is assumed that a tick in the MIDI file corresponds
   to 1 ms. In the next version, support for reading of tempo from 
   the file should be added.
   This utility is based on the "Python MIDI library" project:
   https://github.com/vishnubob/python-midi
   The above library must be installed.

2. read_midi.vhd
   This is an implementation of the module, which reads the text file
   generated by midi2vhdl_txt and outputs the MIDI command.
   The read_midi entity is defined as follows:

   entity midi_read is
     generic (
       -- name of the file, from which we read the translated commands
       midi_txt_file : string := "midi_in.txt");
     port (
       cmd   : out integer; -- MIDI command
       chan  : out integer; -- MIDI channel
       byte1 : out integer; -- first byte (e.g. Key in Note On) 
       byte2 : out integer; -- second byte (e.g. Velocity in Note On)
       eof   : out std_logic; -- goes high, when EOF is reached
       dav   : out std_logic; -- goes high, when new command is available
       ack   : in  std_logic  -- should be set high when a new command
                              -- is received, and set to low, when dav
                              -- is set low again.
    );
   end midi_read;

The archive contains also additional tools:

3. read_midi_tb.vhd 
   This is a simple testbench, allowing to verify operation of read_midi.vhd

4. midi2seq.py
   This is a simple utility allowing to verify, that the MIDI file was 
   correctly interpreted. Currently it sends the decoded and sorted MIDI
   commands to the MIDI device. I have used it in the Linux environment
   in the following way:
   a) I have started qjackctl
   b) I have started qsynth
   c) I have loaded the "snd-virmidi" driver to create virtual MIDI ports
   d) I have connected the Virtual Raw MIDI 1-0 to the qsynth in qjackctl
   e) I have run "midi2seq.py my_midi_file.mid /dev/snd/midiC1D0"
   This utility is also based on the "Python MIDI library" project.

To run the VHDL testbench, you should convert your MIDI file to the cw.txt
file with:
$ ./midi2vhdl_txt my_midi_file.mid cw.txt
and then run "make".
In the gtkwave you'll see how the MIDI commands are produced on the output
at the appropriate simulation time.
If you connect the output of the read_midi entity to the MIDI input of
your simulated music synthesizer, which writes generated samples to the 
sound file, you'll be able to test your synthesis algorithms with the 
real music score provided in the MIDI format.


Wojciech M. Zabolotny (wzab<at>ise.pw.edu.pl)


